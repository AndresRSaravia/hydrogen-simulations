import numpy as np
# for f in *.out; do echo "$f"; grep "!" "$f" | tail -n 1; done
poss_pos = {
	0:[
		np.array([[0,0,0],[0,0,0],[0,0,0]])
	],
	1:[
		np.array([[1,0,0],[0,0,0],[0,0,0]]),
		np.array([[0,1,0],[0,0,0],[0,0,0]])
	],
	2:[
		np.array([[1,0,1],[0,0,0],[0,0,0]]),
		np.array([[1,0,0],[0,0,0],[0,0,1]]),
		np.array([[0,1,0],[0,0,0],[0,1,0]]),
		np.array([[0,1,0],[0,0,1],[0,0,0]]),
		np.array([[1,1,0],[0,0,0],[0,0,0]]),
		np.array([[1,0,0],[0,0,1],[0,0,0]])
	],
	3:[
		np.array([[1,0,1],[0,0,0],[0,0,1]]),
		np.array([[0,1,0],[1,0,1],[0,0,0]]),
		np.array([[1,1,1],[0,0,0],[0,0,0]]),
		np.array([[1,0,1],[0,0,1],[0,0,0]]),
		np.array([[1,0,1],[0,0,0],[0,1,0]]),
		np.array([[1,1,0],[0,0,0],[0,0,1]]),
		np.array([[1,1,0],[0,0,0],[0,1,0]]),
		np.array([[1,1,0],[1,0,0],[0,0,0]]),
		np.array([[1,1,0],[0,0,1],[0,0,0]]),
		np.array([[1,0,0],[0,0,1],[0,1,0]])
	],
	4:[
		np.array([[0,1,0],[1,0,1],[0,1,0]]),
		np.array([[1,0,1],[0,0,0],[1,0,1]]),
		np.array([[1,1,1],[0,0,0],[1,0,0]]),
		np.array([[1,0,1],[0,0,1],[1,0,0]]),
		np.array([[1,1,0],[1,0,1],[0,0,0]]),
		np.array([[0,1,0],[1,0,1],[1,0,0]]),
		np.array([[1,1,1],[1,0,0],[0,0,0]]),
		np.array([[1,0,1],[1,0,1],[0,0,0]]),
		np.array([[1,1,1],[0,0,0],[0,1,0]]),
		np.array([[1,0,1],[1,0,0],[0,1,0]]),
		np.array([[1,1,0],[0,0,1],[0,0,1]]),
		np.array([[1,1,0],[0,0,0],[0,1,1]]),
		np.array([[1,1,0],[1,0,0],[0,0,1]])
	],
	5:[
		np.array([[1,1,1],[0,0,0],[1,0,1]]),
		np.array([[1,1,0],[1,0,1],[0,1,0]]),
		np.array([[1,1,1],[1,0,0],[1,0,0]]),
		np.array([[1,1,1],[0,0,1],[1,0,0]]),
		np.array([[1,0,1],[0,0,1],[1,1,0]]),
		np.array([[1,0,1],[1,0,0],[1,1,0]]),
		np.array([[1,1,1],[0,0,0],[1,1,0]]),
		np.array([[1,1,1],[1,0,1],[0,0,0]]),
		np.array([[0,1,0],[1,0,1],[1,0,1]]),
		np.array([[1,1,0],[1,0,1],[1,0,0]]),
		np.array([[1,1,0],[1,0,1],[0,0,1]])
	],
	6:[
		np.array([[1,1,1],[1,0,0],[1,0,1]]),
		np.array([[1,0,1],[1,0,1],[1,0,1]]),
		np.array([[1,1,1],[1,0,1],[0,1,0]]),
		np.array([[1,1,0],[1,0,1],[0,1,1]]),
		np.array([[1,1,1],[1,0,1],[0,0,1]]),
		np.array([[1,1,1],[1,0,0],[0,1,1]])
	],
	7:[
		np.array([[0,1,1],[1,0,1],[1,1,1]]),
		np.array([[1,0,1],[1,0,1],[1,1,1]])
	],
	8:[
		np.array([[1,1,1],[1,0,1],[1,1,1]])
	],
}


poss_pos_better = {}
for key in poss_pos:
	for index in range(len(poss_pos[key])):
		arr = poss_pos[key][index]
		title = "v"+str(key)+"c"+f'{index:02}c'
		poss_pos_better[title] = {"array": poss_pos[key][index]}

outvalues = [
	[("v0c00c",-6436.94089778),("v0c00s",-6435.72681369)],
	[("v1c00c",-6438.15568824),("v1c00s",-6436.94088967)],
	[("v1c01c",-6438.15547208),("v1c01s",-6436.94089777)],
	[("v2c00c",-6439.37098724),("v2c00s",-6438.15568800)],
	[("v2c01c",-6439.37034185),("v2c01s",-6438.15494037)],
	[("v2c02c",-6439.37070602),("v2c02s",-6438.15570229)],
	[("v2c03c",-6439.37066340),("v2c03s",-6438.15568567)],
	[("v2c04c",-6439.37068612),("v2c04s",-6438.15548278)],
	[("v2c05c",-6439.37033490),("v2c05s",-6438.15499816)],
	[("v3c00c",-6440.58608118),("v3c00s",-6439.37035312)],
	[("v3c01c",-6440.58631161),("v3c01s",-6439.37100805)],
	[("v3c02c",-6440.58628924),("v3c02s",-6439.37070334)],
	[("v3c03c",-6440.58599947),("v3c03s",-6439.37023691)],
	[("v3c04c",-6440.58570565),("v3c04s",-6439.36979706)],
	[("v3c05c",-6440.58538315),("v3c05s",-6439.36951795)],
	[("v3c06c",-6440.58596647),("v3c06s",-6439.37023302)],
	[("v3c07c",-6440.58624056),("v3c07s",-6439.37067681)],
	[("v3c08c",-6440.58601249),("v3c08s",-6439.37032365)],
	[("v3c09c",-6440.58558148),("v3c09s",-6439.36975997)],
	[("v4c00c",-6441.80213993),("v4c00s",-6440.58659513)],
	[("v4c01c",-6441.80148186),("v4c01s",-6440.58554496)],
	[("v4c02c",-6441.80141278),("v4c02s",-6440.58530901)],
	[("v4c03c",-6441.80116332),("v4c03s",-6440.58491745)],
	[("v4c04c",-6441.80197535),("v4c04s",-6440.58601155)],
	[("v4c05c",-6441.80174536),("v4c05s",-6440.58560176)],
	[("v4c06c",-6441.80198260),("v4c06s",-6440.58596590)],
	[("v4c07c",-6441.80168387),("v4c07s",-6440.58547526)],
	[("v4c08c",-6441.80169371),("v4c08s",-6440.58548539)],
	[("v4c09c",-6441.80145693),("v4c09s",-6440.58511917)],
	[("v4c10c",-6441.80125478),("v4c10s",-6440.58489186)],
	[("v4c11c",-6441.80108732),("v4c11s",-6440.58471771)],
	[("v4c12c",-6441.80101315),("v4c12s",-6440.58468359)],
	[("v5c00c",-6443.01687668),("v5c00s",-6441.80046672)],
	[("v5c01c",-6443.01795196),("v5c01s",-6441.80164096)],
	[("v5c02c",-6443.01750976),("v5c02s",-6441.80109818)],
	[("v5c03c",-6443.01714369),("v5c03s",-6441.80056854)],
	[("v5c04c",-6443.01707544),("v5c04s",-6441.80029882)],
	[("v5c05c",-6443.01714828),("v5c05s",-6441.80058507)],
	[("v5c06c",-6443.01716709),("v5c06s",-6441.80054714)],
	[("v5c07c",-6443.01805312),("v5c07s",-6441.80168934)],
	[("v5c08c",-6443.01762606),("v5c08s",-6441.80092997)],
	[("v5c09c",-6443.01785800),("v5c09s",-6441.80129353)],
	[("v5c10c",-6443.01725902),("v5c10s",-6441.80054252)],
	[("v6c00c",-6444.23301761),("v6c00s",-6443.01622208)],
	[("v6c01c",-6444.23296474),("v6c01s",-6443.01611693)],
	[("v6c02c",-6444.23419709),("v6c02s",-6443.01740214)],
	[("v6c03c",-6444.23365400),("v6c03s",-6443.01665102)],
	[("v6c04c",-6444.23367143),("v6c04s",-6443.01682159)],
	[("v6c05c",-6444.23351887),("v6c05s",-6443.01646803)],
	[("v7c00c",-6445.45017485),("v7c00s",-6444.23301079)],
	[("v7c01c",-6445.44960890),("v7c01s",-6444.23245649)],
	[("v8c00c",-6446.66638754),("v8c00s",-6445.44907972)],
]

outvalues = [
	[("v0c00c",-7542.0540126735),("v0c00s",-7540.8383319886)],
	[("v4c00c",-7546.9210655098),("v4c00s",-7545.7045484252)],
	[("v4c01c",-7546.9212273564),("v4c01s",-7545.7032513009)],
	[("v8c00c",-7551.7915005573),("v8c00s",-7550.5728446869)],
]

for item in outvalues:
	outname = item[0][0]
	outvalc = item[0][1]
	outvals = item[1][1]
	outdiff = (outvalc-outvals)*13.605684958731
	Eads = (outdiff - 0.5*(-31.744828518))
	poss_pos_better[outname]["Eads"] = Eads
print(poss_pos_better)

Eadslist = []
text = "\\begin{center}\n\\begin{tabular}{|c|c|}\n\hline\n"
text += "key & Eads \\\\ \hline\n"
for key in poss_pos_better:
	if "Eads" in poss_pos_better[key].keys():
		Eads = poss_pos_better[key]["Eads"]
		text += str(key)+" & "+str(Eads)+" \\\\ \hline\n"
		Eadslist.append(Eads)
text += "\end{tabular}\n\end{center}\n"
print(text)

Jlist = []
text = "\\begin{center}\n\\begin{tabular}{|c|c|}\n\hline\n"
text += "key & J \\\\ \hline\n"
for key in poss_pos_better:
	#print(poss_pos_better["v0c00c"]["Eads"])
	if(key!="v0c00c"):
		if "Eads" in poss_pos_better[key].keys():
			J = (poss_pos_better[key]["Eads"]-poss_pos_better["v0c00c"]["Eads"])/int(key[1])
			text += str(key)+" & "+str(J)+" \\\\ \hline\n"
			Jlist.append(J)
text += "\end{tabular}\n\end{center}\n"
print(text)

kb = 8.617333262e-5
print(-2*(np.array(Jlist)).mean()/(kb*np.log(1+np.sqrt(2))))