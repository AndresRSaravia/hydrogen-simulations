import numpy as np

poss_pos = {
	0:[
		np.array([[0,0,0],[0,0,0],[0,0,0]])
	],
	1:[
		np.array([[1,0,0],[0,0,0],[0,0,0]]),
		np.array([[0,1,0],[0,0,0],[0,0,0]])
	],
	2:[
		np.array([[1,0,1],[0,0,0],[0,0,0]]),
		np.array([[1,0,0],[0,0,0],[0,0,1]]),
		np.array([[0,1,0],[0,0,0],[0,1,0]]),
		np.array([[0,1,0],[0,0,1],[0,0,0]]),
		np.array([[1,1,0],[0,0,0],[0,0,0]]),
		np.array([[1,0,0],[0,0,1],[0,0,0]])
	],
	3:[
		np.array([[1,0,1],[0,0,0],[0,0,1]]),
		np.array([[0,1,0],[1,0,1],[0,0,0]]),
		np.array([[1,1,1],[0,0,0],[0,0,0]]),
		np.array([[1,0,1],[0,0,1],[0,0,0]]),
		np.array([[1,0,1],[0,0,0],[0,1,0]]),
		np.array([[1,1,0],[0,0,0],[0,0,1]]),
		np.array([[1,1,0],[0,0,0],[0,1,0]]),
		np.array([[1,1,0],[1,0,0],[0,0,0]]),
		np.array([[1,1,0],[0,0,1],[0,0,0]]),
		np.array([[1,0,0],[0,0,1],[0,1,0]])
	],
	4:[
		np.array([[0,1,0],[1,0,1],[0,1,0]]),
		np.array([[1,0,1],[0,0,0],[1,0,1]]),
		np.array([[1,1,1],[0,0,0],[1,0,0]]),
		np.array([[1,0,1],[0,0,1],[1,0,0]]),
		np.array([[1,1,0],[1,0,1],[0,0,0]]),
		np.array([[0,1,0],[1,0,1],[1,0,0]]),
		np.array([[1,1,1],[1,0,0],[0,0,0]]),
		np.array([[1,0,1],[1,0,1],[0,0,0]]),
		np.array([[1,1,1],[0,0,0],[0,1,0]]),
		np.array([[1,0,1],[1,0,0],[0,1,0]]),
		np.array([[1,1,0],[0,0,1],[0,0,1]]),
		np.array([[1,1,0],[0,0,0],[0,1,1]]),
		np.array([[1,1,0],[1,0,0],[0,0,1]])
	],
	5:[
		np.array([[1,1,1],[0,0,0],[1,0,1]]),
		np.array([[1,1,0],[1,0,1],[0,1,0]]),
		np.array([[1,1,1],[1,0,0],[1,0,0]]),
		np.array([[1,1,1],[0,0,1],[1,0,0]]),
		np.array([[1,0,1],[0,0,1],[1,1,0]]),
		np.array([[1,0,1],[1,0,0],[1,1,0]]),
		np.array([[1,1,1],[0,0,0],[1,1,0]]),
		np.array([[1,1,1],[1,0,1],[0,0,0]]),
		np.array([[0,1,0],[1,0,1],[1,0,1]]),
		np.array([[1,1,0],[1,0,1],[1,0,0]]),
		np.array([[1,1,0],[1,0,1],[0,0,1]])
	],
	6:[
		np.array([[1,1,1],[1,0,0],[1,0,1]]),
		np.array([[1,0,1],[1,0,1],[1,0,1]]),
		np.array([[1,1,1],[1,0,1],[0,1,0]]),
		np.array([[1,1,0],[1,0,1],[0,1,1]]),
		np.array([[1,1,1],[1,0,1],[0,0,1]]),
		np.array([[1,1,1],[1,0,0],[0,1,1]])
	],
	7:[
		np.array([[0,1,1],[1,0,1],[1,1,1]]),
		np.array([[1,0,1],[1,0,1],[1,1,1]])
	],
	8:[
		np.array([[1,1,1],[1,0,1],[1,1,1]])
	],
}

np.array([[1,1,1],[1,0,1],[1,1,1]])

intitles = []
for key in poss_pos:
	for index in range(len(poss_pos[key])):
		arr = poss_pos[key][index]
		for mode in ["s","c"]:
			intitle = "v"+str(key)+"c"+f'{index:02}'+mode
			intitles.append(intitle)
			hydrogens = [
				(" H 0.5000 0.5000 0.60000 1 1 1\n" if mode=="c" else ""),
				(" H 0.2500 0.2500 0.60000 1 1 1\n" if arr[0,0]==1 else ""),
				(" H 0.2500 0.5000 0.60000 1 1 1\n" if arr[0,1]==1 else ""),
				(" H 0.2500 0.7500 0.60000 1 1 1\n" if arr[0,2]==1 else ""),
				(" H 0.5000 0.2500 0.60000 1 1 1\n" if arr[1,0]==1 else ""),
				(" H 0.5000 0.7500 0.60000 1 1 1\n" if arr[1,2]==1 else ""),
				(" H 0.7500 0.2500 0.60000 1 1 1\n" if arr[2,0]==1 else ""),
				(" H 0.7500 0.5000 0.60000 1 1 1\n" if arr[2,1]==1 else ""),
				(" H 0.7500 0.7500 0.60000 1 1 1\n" if arr[2,2]==1 else "")
			]
			hydrogentext = "".join(hydrogens)
			print(hydrogentext)
			incontent = f"""&control
	calculation = 'relax',
	prefix='{intitle}',
	outdir='./temp/', ! temporary directory for large files
	pseudo_dir = './upfs/'	! directory where pp-files are kept
/
&system	
	ibrav = 14,
	celldm(1) = 18.768,
	celldm(2) = 1.000,
	celldm(3) = 3.000,
	celldm(4) = 0.000,
	celldm(5) = 0.000,
	celldm(6) = 0.000,
	nat = {64+key+(1 if mode=="c" else 0)},
	ntyp = {1+(1 if (key>0 or mode=="c") else 0)},
	vdw_corr = 'DFT-D3',
	ecutwfc = 60.00,
	ecutrho = 600.00,
	occupations = 'smearing',
	smearing = 'marzari-vanderbilt',
	degauss=0.04
/
&ELECTRONS
	electron_maxstep = 400,
	conv_thr = 1.0d-6
	mixing_mode = 'local-TF'
	mixing_beta	= 0.3D0
	diagonalization = 'cg'
	startingwfc	= 'atomic+random'
/
&IONS
	trust_radius_max = 0.1D0
	ion_dynamics = 'bfgs'
	ion_positions = 'default'
	pot_extrapolation = 'atomic'
	wfc_extrapolation = 'none'
/
ATOMIC_SPECIES
	Ni 58.693 Ni.pbe-n-rrkjus_psl.0.1.UPF
	H 1.008 H.pbe-rrkjus_psl.1.0.0.UPF
ATOMIC_POSITIONS alat
 Ni 0.0000 0.0000 0.00000 0 0 0
 Ni 0.2500 0.0000 0.00000 0 0 0
 Ni 0.0000 0.2500 0.00000 0 0 0
 Ni 0.2500 0.2500 0.00000 0 0 0
 Ni 0.5000 0.0000 0.00000 0 0 0
 Ni 0.7500 0.0000 0.00000 0 0 0
 Ni 0.5000 0.2500 0.00000 0 0 0
 Ni 0.7500 0.2500 0.00000 0 0 0
 Ni 0.0000 0.5000 0.00000 0 0 0
 Ni 0.2500 0.5000 0.00000 0 0 0
 Ni 0.0000 0.7500 0.00000 0 0 0
 Ni 0.2500 0.7500 0.00000 0 0 0
 Ni 0.5000 0.5000 0.00000 0 0 0
 Ni 0.7500 0.5000 0.00000 0 0 0
 Ni 0.5000 0.7500 0.00000 0 0 0
 Ni 0.7500 0.7500 0.00000 0 0 0
 Ni 0.1250 0.1250 0.17675 0 0 0
 Ni 0.1250 0.3750 0.17675 0 0 0
 Ni 0.3750 0.1250 0.17675 0 0 0
 Ni 0.3750 0.3750 0.17675 0 0 0
 Ni 0.6250 0.1250 0.17675 0 0 0
 Ni 0.6250 0.3750 0.17675 0 0 0
 Ni 0.8750 0.1250 0.17675 0 0 0
 Ni 0.8750 0.3750 0.17675 0 0 0
 Ni 0.1250 0.6250 0.17675 0 0 0
 Ni 0.1250 0.8750 0.17675 0 0 0
 Ni 0.3750 0.6250 0.17675 0 0 0
 Ni 0.3750 0.8750 0.17675 0 0 0
 Ni 0.6250 0.6250 0.17675 0 0 0
 Ni 0.6250 0.8750 0.17675 0 0 0
 Ni 0.8750 0.6250 0.17675 0 0 0
 Ni 0.8750 0.8750 0.17675 0 0 0
 Ni 0.0000 0.0000 0.35355 0 0 0
 Ni 0.2500 0.0000 0.35355 0 0 0
 Ni 0.0000 0.2500 0.35355 0 0 0
 Ni 0.2500 0.2500 0.35355 0 0 0
 Ni 0.5000 0.0000 0.35355 0 0 0
 Ni 0.7500 0.0000 0.35355 0 0 0
 Ni 0.5000 0.2500 0.35355 0 0 0
 Ni 0.7500 0.2500 0.35355 0 0 0
 Ni 0.0000 0.5000 0.35355 0 0 0
 Ni 0.2500 0.5000 0.35355 0 0 0
 Ni 0.0000 0.7500 0.35355 0 0 0
 Ni 0.2500 0.7500 0.35355 0 0 0
 Ni 0.5000 0.5000 0.35355 0 0 0
 Ni 0.7500 0.5000 0.35355 0 0 0
 Ni 0.5000 0.7500 0.35355 0 0 0
 Ni 0.7500 0.7500 0.35355 0 0 0
 Ni 0.1250 0.1250 0.53030 1 1 1
 Ni 0.1250 0.3750 0.53030 1 1 1
 Ni 0.3750 0.1250 0.53030 1 1 1
 Ni 0.3750 0.3750 0.53030 1 1 1
 Ni 0.6250 0.1250 0.53030 1 1 1
 Ni 0.6250 0.3750 0.53030 1 1 1
 Ni 0.8750 0.1250 0.53030 1 1 1
 Ni 0.8750 0.3750 0.53030 1 1 1
 Ni 0.1250 0.6250 0.53030 1 1 1
 Ni 0.1250 0.8750 0.53030 1 1 1
 Ni 0.3750 0.6250 0.53030 1 1 1
 Ni 0.3750 0.8750 0.53030 1 1 1
 Ni 0.6250 0.6250 0.53030 1 1 1
 Ni 0.6250 0.8750 0.53030 1 1 1
 Ni 0.8750 0.6250 0.53030 1 1 1
 Ni 0.8750 0.8750 0.53030 1 1 1
{hydrogentext}K_POINTS automatic
3 3 1 0 0 0
""".format(intitle,key,mode,hydrogentext)
			print(incontent)
			infile = open("../inshdata/"+intitle+".in","w")
			infile.write(incontent)
			infile.close()

print((intitles), len(intitles))

""" for f in *.out; do echo "$f"; grep "!" "$f" | tail -n 1; done"""